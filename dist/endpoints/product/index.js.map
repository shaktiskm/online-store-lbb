{"version":3,"sources":["../../../lib/endpoints/product/index.es6"],"names":["express","require","getGenericRepoIns","getServiceInstance","uuid","UniqueIdService","mwDeletePayloadValidation","NODE_ENV","process","env","nodeEnv","config","Object","freeze","dbService","uniqueIdServiceIns","productServiceIns","router","Router","rootRoute","route","paramRoute","paramAddRemoveQtyRoute","get","retrieveProducts","bind","post","createProduct","retrieveProductById","put","updateProductById","delete","deleteProductById","addOrRemoveProductQty","module","exports"],"mappings":";;AACA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AAAA,IACEC,oBAAoBD,QAAQ,iCAAR,CADtB;AAAA,IAEEE,qBAAqBF,QAAQ,kBAAR,CAFvB;AAAA,IAGEG,OAAOH,QAAQ,MAAR,CAHT;AAAA,IAIEI,kBAAkBJ,QAAQ,4BAAR,CAJpB;AAAA,IAKEK,4BAA4BL,QAAQ,qDAAR,CAL9B;;AAOI,IAACM,QAAD,GAAaC,QAAQC,GAArB,CAACF,QAAD;AAAA,IACFG,OADE,GACQH,YAAY,OADpB;AAAA,IAEFI,MAFE,GAEOC,OAAOC,MAAP,CAAcZ,QAAQ,qBAAqBS,OAA7B,CAAd,CAFP;AAAA,IAGFI,SAHE,GAGUZ,kBAAkBS,MAAlB,CAHV;AAAA,IAIFI,kBAJE,GAImB,IAAIV,eAAJ,CAAoBD,IAApB,CAJnB;AAAA,IAKFY,iBALE,GAKkBb,mBAAmBW,SAAnB,EAA8BC,kBAA9B,CALlB;AAAA,IAMFE,MANE,GAMOjB,QAAQkB,MAAR,EANP;AAAA,IAOFC,SAPE,GAOUF,OAAOG,KAAP,CAAa,GAAb,CAPV;AAAA,IAQFC,UARE,GAQWJ,OAAOG,KAAP,CAAa,MAAb,CARX;AAAA,IASFE,sBATE,GASuBL,OAAOG,KAAP,CAAa,mBAAb,CATvB;;;AAWJD,UACGI,GADH,CACOP,kBAAkBQ,gBAAlB,CAAmCC,IAAnC,CAAwCT,iBAAxC,CADP;;AAGAG,UACGO,IADH,CACQV,kBAAkBW,aAAlB,CAAgCF,IAAhC,CAAqCT,iBAArC,CADR;;AAGAK,WACGE,GADH,CACOP,kBAAkBY,mBAAlB,CAAsCH,IAAtC,CAA2CT,iBAA3C,CADP;;AAGAK,WACGQ,GADH,CACOb,kBAAkBc,iBAAlB,CAAoCL,IAApC,CAAyCT,iBAAzC,CADP;;AAGAK,WACGU,MADH,CACUzB,yBADV,EAEGyB,MAFH,CAEUf,kBAAkBgB,iBAAlB,CAAoCP,IAApC,CAAyCT,iBAAzC,CAFV;;AAIAM,uBACGO,GADH,CACOb,kBAAkBiB,qBAAlB,CAAwCR,IAAxC,CAA6CT,iBAA7C,CADP;;AAGAkB,OAAOC,OAAP,GAAiBlB,MAAjB","file":"index.js","sourcesContent":["\nconst express = require(\"express\"),\n  getGenericRepoIns = require(\"../../mongodb/GenericRepository\"),\n  getServiceInstance = require(\"./ProductService\"),\n  uuid = require(\"uuid\"),\n  UniqueIdService = require(\"../../util/UniqueIdService\"),\n  mwDeletePayloadValidation = require(\"../../middleware_services/mwDeletePayloadValidation\");\n\nlet {NODE_ENV} = process.env,\n  nodeEnv = NODE_ENV || \"local\",\n  config = Object.freeze(require(\"../../../config/\" + nodeEnv)),\n  dbService = getGenericRepoIns(config),\n  uniqueIdServiceIns = new UniqueIdService(uuid),\n  productServiceIns = getServiceInstance(dbService, uniqueIdServiceIns),\n  router = express.Router(),\n  rootRoute = router.route(\"/\"),\n  paramRoute = router.route(\"/:id\"),\n  paramAddRemoveQtyRoute = router.route(\"/:id/addRemoveQty\");\n\nrootRoute\n  .get(productServiceIns.retrieveProducts.bind(productServiceIns));\n\nrootRoute\n  .post(productServiceIns.createProduct.bind(productServiceIns));\n\nparamRoute\n  .get(productServiceIns.retrieveProductById.bind(productServiceIns));\n\nparamRoute\n  .put(productServiceIns.updateProductById.bind(productServiceIns));\n\nparamRoute\n  .delete(mwDeletePayloadValidation)\n  .delete(productServiceIns.deleteProductById.bind(productServiceIns));\n\nparamAddRemoveQtyRoute\n  .put(productServiceIns.addOrRemoveProductQty.bind(productServiceIns));\n\nmodule.exports = router;\n"]}