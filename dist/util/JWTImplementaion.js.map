{"version":3,"sources":["../../lib/util/JWTImplementaion.es6"],"names":["jsonwebtoken","require","Q","JWTImplementaion","secretKey","payload","options","token","sign","ninvoke","module","exports"],"mappings":";;;;;;AAAA,IAAMA,eAAeC,QAAQ,cAAR,CAArB;AAAA,IACEC,IAAID,QAAQ,GAAR,CADN;;IAGME,gB;AAEJ,4BAAYC,SAAZ,EAAuB;AAAA;;AACrB,SAAKA,SAAL,GAAiBA,SAAjB;AACD;;;;yBAEIC,O,EAASC,O,EAAS;;AAErB,UAAIC,QAAQP,aAAaQ,IAAb,CAAkBH,OAAlB,EAA2B,KAAKD,SAAhC,EAA2CE,OAA3C,CAAZ;;AAEA,aAAOC,KAAP;AACD;;;gCAEWA,K,EAAO;AACjB,aAAOL,EAAEO,OAAF,CAAUT,YAAV,EAAwB,QAAxB,EAAkCO,KAAlC,EAAyC,KAAKH,SAA9C,CAAP;AACD;;;;;;AAGH;;;;AAIAM,OAAOC,OAAP,GAAiBR,gBAAjB","file":"JWTImplementaion.js","sourcesContent":["const jsonwebtoken = require(\"jsonwebtoken\"),\n  Q = require(\"q\");\n\nclass JWTImplementaion {\n\n  constructor(secretKey) {\n    this.secretKey = secretKey;\n  }\n\n  sign(payload, options) {\n\n    let token = jsonwebtoken.sign(payload, this.secretKey, options);\n\n    return token;\n  }\n\n  verifyToken(token) {\n    return Q.ninvoke(jsonwebtoken, \"verify\", token, this.secretKey);\n  }\n}\n\n/*\nJWT Sample Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoicHJvdmlkZXIiLCJ1c2VyaWQiOiI2Yzg0ZmI5MC0xMmM0LTExZTEtODQwZC03YjI1YzVlZTc3NWEiLCJpYXQiOjE0NjQxNzQwOTF9.r2J276yxVil4DYTk88ApmoW4aTZXrwuqzqazo9KXnRE\n */\n\nmodule.exports = JWTImplementaion;\n"]}